<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans.xsd
           http://www.springframework.org/schema/aop
           http://www.springframework.org/schema/aop/spring-aop.xsd
           http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context.xsd
           http://www.springframework.org/schema/tx
           http://www.springframework.org/schema/tx/spring-tx.xsd
           http://www.springframework.org/schema/mvc
           http://www.springframework.org/schema/mvc/spring-mvc.xsd">

	<!-- 扫描包 扫描包，除了这些类以外 -->
	<context:component-scan base-package="com.yc.fresh">
		<context:exclude-filter type="annotation"
			expression="org.springframework.web.bind.annotation.ResponseBody" />
		<context:exclude-filter type="annotation"
			expression="org.springframework.web.bind.annotation.RequestMapping" />
	</context:component-scan>

	<!-- 导入资源文件 -->
	<context:property-placeholder location="classpath:db.properties" />

	<!-- 配置c3p0的连接 -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="driverClass" value="${driver}"></property>
		<property name="jdbcUrl" value="${url}"></property>
		<property name="user" value="${user}"></property>
		<property name="password" value="${pwd}"></property>
		<property name="maxPoolSize" value="100"></property>
	</bean>
	
	
	
	<!-- 让mybatis从这个数据源中获取连接 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- 配置数据源 -->
		<property name="dataSource" ref="dataSource"></property>
		<!-- mybatis的配置文件位置 -->
		<property name="mapperLocations" value="classpath:mapper/*Mapper.xml"></property>
		<!-- 启用别名 -->
		<property name="typeAliasesPackage" value="com.yc.fresh.entiry"></property>
	</bean>


	<!-- 配置mybatis映射接口的代理实现，bean中的id属性必须跟映射接口中的方法名一致 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!-- 为什么要配置这一条属性？basePackage的作用是什么？ -->
		<property name="basePackage" value="com.yc.fresh.mapper"></property>
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
		<!-- 由于sqlSessionFactoryBeanName的类型是字符串，所以用value而不是ref -->
	</bean>



	<!-- 配置事务管理 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>

	<!-- 开启事务注解 -->
	<tx:annotation-driven transaction-manager="transactionManager" />
	
	<!-- 配置邮件接口 -->
 	<bean id="sendMailUtil" class="com.yc.fresh.util.SendMailUtil">
		<property name = "userName" value="1417734497@qq.com"></property>
		<property name = "pwd" value="qvikeeyrkvnngadi"></property>
	</bean> 
	
	
	<!-- redis的连接配置 -->
	<!-- 连接池配置 -->
	<bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
		<!-- 最大连接数 -->
		<property name="maxTotal" value="30" />

		<!-- 最大空闲连接数 -->
		<property name="maxIdle" value="10" />

		<!-- 每次释放连接的最大数目 -->
		<property name="numTestsPerEvictionRun" value="1024" />

		<!-- 释放连接的扫描间隔（毫秒） -->
		<property name="timeBetweenEvictionRunsMillis" value="30000" />

		<!-- 连接最小空闲时间 -->
		<property name="minEvictableIdleTimeMillis" value="1800000" />

		<!-- 连接空闲多久后释放, 当空闲时间>该值 且 空闲连接>最大空闲连接数 时直接释放 -->
		<property name="softMinEvictableIdleTimeMillis" value="10000" />

		<!-- 获取连接时的最大等待毫秒数,小于零:阻塞不确定的时间,默认-1 -->
		<property name="maxWaitMillis" value="1500" />

		<!-- 在获取连接的时候检查有效性, 默认false -->
		<property name="testOnBorrow" value="true" />

		<!-- 在空闲时检查有效性, 默认false -->
		<property name="testWhileIdle" value="true" />

		<!-- 连接耗尽时是否阻塞, false报异常,ture阻塞直到超时, 默认true -->
		<property name="blockWhenExhausted" value="false" />
	</bean>


	<!--配置redis的连接参数 如需要密码,请配置,database是redis的指定哪个库 -->
	<bean id="jedisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
		<property name="hostName" value="${redis.host}" />
		<property name="port" value="${redis.port}" />
		<!--<property name="password" value="${redis.password}"/> -->
		<property name="database" value="${redis.dbIndex}" />
		<property name="poolConfig" ref="jedisPoolConfig" />
	</bean>

	<!-- redisTemplate配置，redisTemplate是对Jedis的对redis操作的扩展，有更多的操作，封装使操作更便捷 -->
	<bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
		<property name="connectionFactory" ref="jedisConnectionFactory" />
	</bean>

	<!-- <bean id="jedisPool" class="redis.clients.jedis.JedisPool"> <constructor-arg 
		name="host" value="${redis.ip}"></constructor-arg> <constructor-arg name="port" 
		value="${redis.port}"></constructor-arg> <constructor-arg name="poolConfig" 
		ref="jedisPoolConfig"></constructor-arg> </bean> -->
	
	
	
</beans>